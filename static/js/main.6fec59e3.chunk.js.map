{"version":3,"sources":["components/Logo.jsx","components/SerachBox.jsx","components/Navbar.jsx","components/GlobalDataSection.jsx","components/Table.jsx","components/Spinner.js","components/HomePage.jsx","components/Thead.jsx","components/InfinitiiTr.jsx","components/Cryptocurrencies.jsx","components/Watchlist.jsx","components/Exchanges.jsx","components/About.jsx","components/News.jsx","components/Card.jsx","components/CoinCard.jsx","components/ExchangeCard.jsx","components/ExchangesCard.jsx","components/NotFound.jsx","components/Coindex.jsx","index.js"],"names":["Logo","className","to","SerachBox","useState","allCoinNames","setAllCoinNames","search","setSearch","CoinGeckoClient","CoinGecko","useEffect","a","coins","list","data","fetchData","searchResult","filter","s","name","toLowerCase","startsWith","symbol","type","value","onChange","e","target","console","log","placeholder","autoFocus","length","map","item","id","Navbar","path","route","activeclassname","exact","GlobalDataSection","cryptocurrencies","marketCap","exchanges","end","start","decimals","separator","Table","handleAddToWatchList","watchListRef","useRef","formated","x","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","coin","i","onClick","src","image","alt","market_cap_rank","ref","watchList","color","market_cap_change_percentage_24h","current_price","market_cap","toFixed","high_24h","low_24h","Spinner","HomePage","globalData","setGlobalData","topCoin","setTopCoin","isFetch","setIsFetch","source","axios","CancelToken","coinsURL","fetchGlobalData","fetchTopCoinData","global","res","markets","active_cryptocurrencies","total_market_cap","usd","newData","addToWatchList","findCoinId","find","updateState","post","removeFromWatchList","get","cancelToken","token","catch","thrown","isCancel","message","deleteItem","delete","Thead","InfinitiiTr","Cryptocurrencies","isLoad","setIsLoad","pageNumber","setPageNumber","coinListData","setCoinListData","infinitable","page","concat","prev","Watchlist","setWatchList","url","fil","Exchanges","exchangesList","setExchangesList","btcRate","setBtcRate","fetchDetails","all","simple","price","ids","vs_currencies","btcUsdRate","exchange","img","vol24","trade_volume_24h_btc_normalized","score","trust_score_rank","year","year_established","bitcoin","error","colSpan","About","fontSize","News","news","setNews","newsDetails","href","origin","time","header","Card","priceColor","change24","data-name","rank","hpLink","class","dangerouslySetInnerHTML","__html","createMarkup","description","en","categories","category","market_data","btc","eth","price_change_percentage_1h_in_currency","price_change_24h","price_change_percentage_7d","price_change_percentage_14d","price_change_percentage_30d","price_change_percentage_60d","price_change_percentage_200d","price_change_percentage_1y","status_updates","CoinCard","coinData","setCoinData","match","params","fetch","price_change_percentage_24h","large","links","homepage","cancel","ExchangeCard","country","scoreRank","urls","tickers","btcTradeVolume24h","notice","formatedNum","colspan","coin_id","split","join","trade_url","base","bid_ask_spread_percentage","converted_last","converted_volume","trust_score","ExchangesCard","exchangesData","setExchangesData","facebook_url","other_url_1","other_url_2","trade_volume_24h_btc","alert_notice","NotFound","Coindex","routes","Component","render","location","TransitionGroup","CSSTransition","timeout","classNames","unmountOnExit","component","key","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fec59e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo-wrap\">\r\n            <Link to='/' className=\"logo\">Coindex</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './searchBox.css'\r\nimport CoinGecko from 'coingecko-api'\r\nimport { Link } from 'react-router-dom'\r\nexport default function SerachBox() {\r\n    const [allCoinNames, setAllCoinNames] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const CoinGeckoClient = new CoinGecko()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let {data} = await CoinGeckoClient.coins.list();\r\n            setAllCoinNames(data)\r\n        }\r\n        fetchData()\r\n    },[])\r\n    let searchResult = allCoinNames.filter(s => \r\n        s.name.toLowerCase()\r\n              .startsWith(search) || \r\n        s.symbol.startsWith(search))\r\n\r\n    const showResult = (e) => {\r\n        setSearch(e.target.value)\r\n        console.log(searchResult);\r\n    }\r\n    return (\r\n        <div className='serach-box'>\r\n            <input \r\n                type='search'\r\n                value={search}\r\n                onChange={showResult}\r\n                placeholder='Search Cryptocurrency...'\r\n                autoFocus\r\n            />\r\n            {search.length > 0 && \r\n            <div className='search-result-wrap'>\r\n                <div>\r\n                    {console.log(allCoinNames)}\r\n                    {searchResult.map(item =>\r\n                        <Link key={item.id} to={`/cryptocurrencies/${item.id}`}>\r\n                            {item.name}\r\n                        </Link>)}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.css'\r\nimport './nav.css'\r\nimport Logo from './Logo'\r\nimport SerachBox from './SerachBox'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(){\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies'},\r\n        { path: '/exchanges', name: 'Exchanges'},\r\n        { path: '/watchlist', name: 'Watchlist'},\r\n        { path: '/news', name: 'News'},\r\n        { path: '/about', name: 'About'},\r\n    ]\r\n    return (\r\n        <nav>\r\n            <Logo/>\r\n            <div className=\"menu\">\r\n            {routes.map( route => {\r\n                return <Link \r\n                    to={route.path}\r\n                    key={route.path}\r\n                    activeclassname='active'\r\n                    exact=\"true\"\r\n                >{route.name}</Link>\r\n            })}\r\n            </div>\r\n            <SerachBox/>\r\n        </nav>\r\n    )\r\n}","import CountUp from 'react-countup';\r\n\r\nexport default function GlobalDataSection({cryptocurrencies,marketCap,exchanges}) {\r\n    return (\r\n        <section className=\"global-data-section\">\r\n                    <div className=\"details-num-card\">\r\n                        <h1><CountUp end={cryptocurrencies || ''}/></h1>\r\n                        <h2>Cryptocurrencies</h2>\r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>$<CountUp\r\n                                start={0}\r\n                                decimals={0}\r\n                                separator={','}\r\n                                // end={Math.round(marketCap / 1000000000) || 0}\r\n                                end={marketCap || ''}\r\n                            /></h1>\r\n                        <h2>Global Market Cap</h2> \r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>\r\n                            <CountUp end={exchanges || ''}/>\r\n                        </h1>\r\n                        <h2>Exchanges</h2>\r\n                    </div>\r\n            </section>\r\n    )\r\n}","import React,{useState,useEffect,useRef} from 'react'\r\nimport {Link } from \"react-router-dom\";\r\n\r\nimport './table.css'\r\nexport default function Table({data,handleAddToWatchList}) {\r\n  const [watchListBtn, setWatchListBtn] = useState(false)\r\n  const [watchListData, setWatchListData] = useState([])\r\n  const watchListRef = useRef()\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n      <div className=\"fluid-table\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>watch list</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n            data.map((coin,i) => {\r\n            return (\r\n              <tr className='tr-wrap' key={i} onClick={() => handleAddToWatchList(coin)}>\r\n                  <td className='coin-name-td'>\r\n                <Link to={`/cryptocurrencies/${coin.id}`}>\r\n                    <div className=\"card-flex\">\r\n                        <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                        <div className=\"coin-name\">\r\n                          <h5>{coin.name}</h5>\r\n                          <div className=\"coin-mini-details\">\r\n                            <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                            <p className=\"symbol-name\">{coin.symbol}</p>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </Link>\r\n                  </td>\r\n                  <td>\r\n                    <i ref={watchListRef}\r\n                      className={`${coin.watchList ? 'fas' : 'far'} fa-star`}></i>\r\n                    </td>\r\n                  <td\r\n                  className=\"bold\"\r\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{formated(coin.current_price)}</td>\r\n                  <td>{formated(coin.market_cap.toFixed())}</td>\r\n                  <td\r\n                    className=\"bold\"\r\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n                  <td>{formated(coin.high_24h)}</td>\r\n                  <td>{formated(coin.low_24h)}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        \r\n        <div className=\"spinner-wrap\">\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, {useState, useEffect} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport GlobalDataSection from './GlobalDataSection'\r\nimport Table from './Table'\r\nimport './homepage.css'\r\nimport  Spinner from './Spinner'\r\nimport axios from 'axios'\r\n\r\nexport default function HomePage() {\r\n\r\n    const [globalData, setGlobalData] = useState({})\r\n    const [topCoin, setTopCoin] = useState([])\r\n    const [isFetch,setIsFetch] = useState(false)\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const CancelToken = axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    const coinsURL = 'https://606e00260c054f00176564d4.mockapi.io/coins'\r\n\r\n    useEffect(() => {\r\n        fetchGlobalData()\r\n        fetchTopCoinData()\r\n        // checkWatchList()\r\n    },[])\r\n    const fetchGlobalData = async () => {\r\n        setIsFetch(true)\r\n        const { data } = await CoinGeckoClient.global();\r\n        const res = await data.data\r\n        setGlobalData({\r\n            exchanges: res.markets,\r\n            cryptocurrencies: res.active_cryptocurrencies,\r\n            marketCap: res.total_market_cap.usd,\r\n        })\r\n        setIsFetch(false)\r\n    }\r\n    const fetchTopCoinData = async () => {\r\n        setIsFetch(true)\r\n        let {data} = await CoinGeckoClient.coins.markets()\r\n        let newData = data.map(item => ({\r\n            ...item,\r\n            watchList: false\r\n        }))\r\n        setTopCoin(newData)\r\n        setIsFetch(false)\r\n    }\r\n    const addToWatchList = async findCoinId => {\r\n        \r\n        let item = topCoin.find( coin => coin.id === findCoinId.id)\r\n        const updateState = x => topCoin.map( coin => {\r\n            return coin === item ? {...coin,watchList: x} : coin\r\n        })\r\n        setTopCoin(updateState(true))\r\n        if (!item.watchList){\r\n            await axios.post(coinsURL,{...item,watchList: true})            \r\n        } else {\r\n            removeFromWatchList(item)\r\n            setTopCoin(updateState(false))\r\n        }\r\n        \r\n    }\r\n    const removeFromWatchList = async item => {\r\n        if (item){\r\n            let {data} = await axios.get(coinsURL,{cancelToken: source.token})\r\n                .catch( thrown => axios.isCancel(thrown) \r\n                ? console.log('Request canceled', thrown.message)\r\n                : console.log(thrown.message))\r\n            if (data){\r\n                let deleteItem = data.find( coin => coin.symbol === item.symbol)\r\n                await axios.delete(`${coinsURL}/${deleteItem.id}`)\r\n            }\r\n        }\r\n    }\r\n    // const checkWatchList = async () => {\r\n    //     let {data} = await axios.get(coinsURL)\r\n    //     let newData = topCoin.map( coin => {\r\n    //         if (!coin.watchList){\r\n    //             data.map( e => {\r\n    //                 if (coin.symbol === e.symbol){\r\n    //                     coin.watchList = true\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     })\r\n    //     setTopCoin(newData)\r\n    //     // const watchList = topCoin.filter( coin => !coin.watchList)\r\n    //     // watchList.map( coin => {\r\n    //     //     let updataAll = data.map( wlc => coin.symbol )\r\n    //     //     if (coin.symbol)\r\n    //     // })\r\n    // }\r\n    const {cryptocurrencies,exchanges,marketCap} = globalData\r\n    return (\r\n        <div className=\"page homepage\">\r\n            <div>\r\n                {<GlobalDataSection \r\n                    cryptocurrencies={cryptocurrencies}\r\n                    marketCap={marketCap}\r\n                    exchanges={exchanges}\r\n                />}\r\n                <h1 className=\"top-100-txt\">Top 100 Cryptocurrencies</h1>\r\n                {isFetch \r\n                ? <Spinner/> \r\n                : <Table \r\n                    data={topCoin}\r\n                    handleAddToWatchList={(e) => addToWatchList(e)}\r\n                />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Thead() {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default Thead\r\n","import React from 'react'\r\nimport {Link } from \"react-router-dom\";\r\n\r\nexport default function InfinitiiTr({coin}) {\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n        <tr className='tr-wrap' key={coin.id}>\r\n            <td className='coin-name-td'>\r\n          <Link to={`/cryptocurrencies/${coin.id}`}>\r\n              <div className=\"card-flex\">\r\n                  <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                  <div className=\"coin-name\">\r\n                    <h5>{coin.name}</h5>\r\n                    <div className=\"coin-mini-details\">\r\n                      <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                      <p className=\"symbol-name\">{coin.symbol}</p>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </Link>\r\n            </td>\r\n            <td\r\n            className=\"bold\"\r\n            style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n            >{formated(coin.current_price)}</td>\r\n            <td>{formated(coin.market_cap.toFixed())}</td>\r\n            <td\r\n              className=\"bold\"\r\n              style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n            >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n            <td>{formated(coin.high_24h)}</td>\r\n            <td>{formated(coin.low_24h)}</td>\r\n        </tr>\r\n    )\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nimport Thead from './Thead'\r\nimport InfinitiiTr from './InfinitiiTr'\r\n\r\nexport default function Cryptocurrencies() {\r\n    const [isLoad, setIsLoad] = useState(false)\r\n    let [pageNumber, setPageNumber] = useState(1)\r\n    const [coinListData, setCoinListData] = useState([])\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const infinitable = useRef()\r\n    useEffect(() => {\r\n      fetchData()\r\n    },[pageNumber])\r\n    const fetchData = async () => {\r\n      try {\r\n        let {data} = await CoinGeckoClient.coins.markets({\r\n          page: pageNumber\r\n        });\r\n        if (data){\r\n          data.map(item => ({\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            market_cap_rank: item.market_cap_rank,\r\n            symbol: item.symbol,\r\n            market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n            high_24h: item.high_24h,\r\n            low_24h: item.low_24h,\r\n          }))\r\n          setCoinListData(coinListData.concat(data))\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setIsLoad(false)\r\n    }\r\n    const hendleLoadMoreData = () => {\r\n      setIsLoad(true)\r\n      setPageNumber(prev => prev = pageNumber + 1)\r\n    }\r\n    return (\r\n      <div className=\"page\">\r\n        <h1 className=\"allcoin-txt\">All Cryptocurrencies</h1>\r\n        <div ref={infinitable}  className=\"fluid-table\">\r\n        <table className=\"table\">\r\n          <Thead/>\r\n          <tbody >\r\n          { coinListData.length === 0 ? <Spinner/> :  \r\n          coinListData.map((coin,i) => \r\n              <InfinitiiTr\r\n              key={i}\r\n              coin={coin}\r\n            />)\r\n          }\r\n          </tbody>\r\n        </table>\r\n        <div className=\"load-more\" onClick={() => hendleLoadMoreData()}>\r\n          {isLoad ? <span className=\"mini-spinner\"></span> : coinListData.length === 0 ? '' : <h1>load more</h1>}\r\n        </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Table from './Table'\r\nimport { Link } from 'react-router-dom'\r\nimport './watchList.css'\r\nexport default function Watchlist() {\r\n    const [watchList, setWatchList] = useState([])\r\n    const url = 'https://606e00260c054f00176564d4.mockapi.io/coins'\r\n    useEffect(() => {\r\n        const fetchData =  async () => {\r\n            let {data} = await axios.get(url)\r\n            setWatchList(data)\r\n        }\r\n        fetchData()\r\n    },[])\r\n    const removeFromWatchList = async coin => {\r\n        let i = watchList.find( e => coin.id === e.id)\r\n        let fil = watchList.filter(list => list !== i)\r\n        setWatchList(fil)\r\n        await axios.delete(`${url}/${i.id}`)\r\n    }\r\n    return (\r\n        <div  className=\"page\">\r\n            {\r\n                watchList.length === 0 \r\n                ? <div className=\"txt-nothing-msg\">\r\n                    <h1>There Is Nothing Here...</h1>\r\n                    <p>\r\n                        Click <i className='far fa-star'/> to Add Your Favorite Coin To the  WatchList or click <i className='fas fa-star'/> again to remove it\r\n                    </p>\r\n                    <Link to='/'>Top 100 Coin</Link>\r\n                </div>\r\n                : <Table data={watchList} handleAddToWatchList={coin => removeFromWatchList(coin)}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n","import CoinGecko from 'coingecko-api'\r\nimport React, {useState, useEffect} from 'react'\r\nimport Spinner from './Spinner'\r\nimport {Link } from \"react-router-dom\";\r\nimport './exchange.css'\r\nexport default function Exchanges() {\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const [exchangesList, setExchangesList] = useState([])\r\n    const [btcRate, setBtcRate] = useState(0)\r\n    const [isLoad, setIsLoad] = useState(false)\r\n    useEffect(() => {\r\n        let fetchDetails = async () => {\r\n            setIsLoad(true)\r\n            let {data} = await CoinGeckoClient.exchanges.all()\r\n            let btcUsdRate = await CoinGeckoClient.simple.price({\r\n                ids: 'bitcoin',\r\n                vs_currencies: 'usd',\r\n            });\r\n            let newData = data.map(exchange => ({\r\n                id: exchange.id,\r\n                name: exchange.name,\r\n                img: exchange.image,\r\n                vol24: exchange.trade_volume_24h_btc_normalized,\r\n                score: exchange.trust_score_rank,\r\n                url: exchange.url,\r\n                year: exchange.year_established\r\n            }))\r\n            setBtcRate(btcUsdRate.data.bitcoin.usd)\r\n            setExchangesList(newData)\r\n            setIsLoad(false)\r\n        }\r\n        try {\r\n            fetchDetails()\r\n        } catch (error) {\r\n            console.error(error)\r\n        }               \r\n    },[])\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n        <div className=\"page\">\r\n            {\r\n                isLoad ? <Spinner/> : \r\n            <table className=\"exchanges-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>exchange name</th>\r\n                        <th colSpan={2}>\r\n                                Volume(24h) price\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th>year established</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n            {exchangesList.map(exchange => {\r\n                return <tr className='tr-wrap' key={exchange.id}>\r\n                    <td ><p>{exchange.score || '-'}</p></td>\r\n                    <td className=\"flex-td\">\r\n                        <span><img className='exchange-img' src={exchange.img} alt={`${exchange.name} symbol`}/></span>\r\n                        <h1>\r\n                            <Link to={`/exchanges/${exchange.id}`}>\r\n                            {exchange.name || '-'}</Link>\r\n                        </h1>\r\n                    </td>\r\n                    <td className=\"left-price\"><p>{exchange.vol24.toFixed()|| '-' } <span className=\"btc-tag\">BTC</span> </p></td>\r\n                    <td className=\"right-price\"><p>{formated(exchange.vol24 * btcRate)}</p></td>\r\n                    <td><p>{exchange.year || '-'}</p></td>\r\n                </tr>\r\n            })}\r\n                </tbody>\r\n            </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div  className=\"page\">\r\n            <div className=\"about-page\">\r\n            <h1>Wellcome to Coindex</h1>\r\n            <p style={{fontSize: '1rem'}}>your best place to Explore the crypto universe !</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Spinner from './Spinner'\r\nimport './news.css'\r\nexport default function News() {\r\n    const [news,setNews] = useState([])\r\n    const [isLoad,setIsLoad] = useState(true)\r\n    const url = `https://hejs.cf/api/news?q=ביטקוין`\r\n    useEffect(() => {\r\n        const fetchData =  async () => {\r\n            setIsLoad(true)\r\n            let {data} = await axios.get(url)\r\n            setNews(data)\r\n            setIsLoad(false)\r\n        }\r\n        fetchData()\r\n    },[])\r\n    useEffect(() => {\r\n        console.log(news);\r\n    },[news])\r\n    return (\r\n        <div  className=\"page\">\r\n            {isLoad ? <Spinner/> : <div className=\"news-wrap\">\r\n                {news.map( (newsDetails,i) => <div className=\"news-card\" key={i}>\r\n                <a href={newsDetails.url} target='_blank'>\r\n                    <span className=\"news-tagname\">{newsDetails.origin}</span>\r\n                    <code>{newsDetails.time}</code>\r\n                    <h1>{newsDetails.header}</h1>\r\n                </a>\r\n                </div>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './card.css'\r\nfunction Card({data}) {\r\n    let priceColor = data.change24 > 0 ? 'rgb(0, 210, 0)' : 'rgb(255, 101, 0)'\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    const  createMarkup = x => ({__html:x})\r\n    const formatedUsd = x => new Intl.NumberFormat('en-US', { \r\n    style: 'currency', \r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2\r\n    }).format(x)\r\n    return (\r\n        <div data-name={data.id} className=\"card\">\r\n            <section className=\"card-cover\">\r\n                <div className=\"data-basic\">\r\n                    <div className=\"data-basic-details\">\r\n                        <img className=\"coin-symbol-img\" src={data.img} alt=\"coin\"></img>\r\n                        <h1 className=\"coin-name\">{data.name}</h1>\r\n                        <p className=\"coin-symbol\">{data.symbol}</p>\r\n                    </div>\r\n                    <div className=\"cards-details-btns\">\r\n                        <p className=\"data-basic-rank\">rank #{data.rank}</p>\r\n                        <a className=\"data-basic-link\" target=\"_blank\" href={data.hpLink}>homepage</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-price-wrap\">\r\n                    <p className=\"data-price-txt\">{data.name} Price \r\n                    <span className=\"data-price-symbol\">({data.symbol})</span></p>\r\n                    <h1 \r\n                    style={{color: priceColor}}\r\n                    className=\"data-price\">{formatedUsd(data.price)}</h1>\r\n                    <p \r\n                        style={{color: priceColor}} \r\n                        className=\"data-price-change\">\r\n                        <span class={`fas ${data.change24 > 0 ? 'fa-sort-up' : data.change24 < 0 ? 'fa-sort-down' : ''}`}></span>\r\n                        {formated(data.change24)}%</p>\r\n                </div>\r\n            </section>\r\n            <section className=\"main-section\">\r\n                <div className=\"coin-description\">\r\n                    <p dangerouslySetInnerHTML={createMarkup(data.description.en)} />\r\n                </div>\r\n                <div className=\"coin-statistics\">\r\n                    <div>\r\n                        <h1 className=\"categories-txt\">categories</h1>\r\n                        <div className=\"categories\">\r\n                            {data.categories.map((category,i) => \r\n                                <i key={i}\r\n                                    className=\"category\">\r\n                                    {category}\r\n                                </i>)}\r\n                        <div>\r\n                            <p>{data.market_data.current_price.btc}BTC</p>\r\n                            <p>{data.market_data.current_price.eth}ETH</p>\r\n                            <td>1h price change: {data.market_data.price_change_percentage_1h_in_currency.usd.toFixed(2)}$</td>\r\n                            <table className=\"coin-price--mini-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>24h</th>\r\n                                        <th>7d</th>\r\n                                        <th>14d</th>\r\n                                        <th>30d</th>\r\n                                        <th>60d</th>\r\n                                        <th>200d</th>\r\n                                        <th>1y</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr className=\"prices\">\r\n                                        <td>{data.market_data.price_change_24h.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_7d.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_14d.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_30d.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_60d.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_200d.toFixed(1)}%</td>\r\n                                        <td>{data.market_data.price_change_percentage_1y.toFixed(1)}%</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {data.status_updates.map( (item,i) => <div key={i}>\r\n                                 <p>{item.description}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,{useState,useEffect} from 'react'\r\nimport Card  from './Card'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nimport axios from 'axios'\r\nexport default function CoinCard(name) {\r\n      const CoinGeckoClient = new CoinGecko()\r\n    const [coinData,setCoinData] =  useState(null)\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source()\r\n        const fetchData = async () => {\r\n            let id = name.match.params.id\r\n            let { data } = await CoinGeckoClient.coins.fetch(id)\r\n            console.log(data);\r\n            setCoinData({\r\n                id: data.id,\r\n                change24: data.market_data.price_change_percentage_24h,\r\n                img: data.image.large,\r\n                name: data.name,\r\n                symbol: data.symbol,\r\n                rank: data.market_cap_rank,\r\n                hpLink: data.links.homepage[0],\r\n                price: data.market_data.current_price.usd,\r\n                description: data.description.en,\r\n                ...data\r\n\r\n            })\r\n        }\r\n        fetchData()\r\n        return () => source.cancel()\r\n    },[])\r\n        return (\r\n\r\n            <div className=\"page\">\r\n                {!coinData ? <Spinner/> : <Card data={coinData}/>}\r\n            </div>\r\n    )\r\n}","import React, { useState,useEffect } from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport {Link } from \"react-router-dom\";\r\nimport './exchange.css'\r\nfunction ExchangeCard({data}) {\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const [btcRate, setBtcRate] = useState(null)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let btcUsdRate = await CoinGeckoClient.simple.price({\r\n                ids: 'bitcoin',\r\n                vs_currencies: 'usd',\r\n            });\r\n            setBtcRate(btcUsdRate.data.bitcoin.usd)\r\n        }\r\n        fetchData()\r\n    },[data])\r\n    const {id,name,country,img,score,\r\n        scoreRank,year,urls,tickers,\r\n        btcTradeVolume24h,notice} = data\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n        }).format(x)\r\n    const formatedNum = x => new Intl.NumberFormat('en-US', { \r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n        }).format(x)\r\n    return (\r\n        <div>\r\n            <div className=\"exchange-card\">\r\n                <div className=\"exchange-card-flexdiv\">\r\n                    <h1 className=\"exchange-card-name\">{name}</h1>\r\n                    <img src={img} alt={`${name}-icon`}/>\r\n                </div>\r\n                <div className=\"exchange-card-prices\">\r\n                    <p className=\"usd-price\">{formated(btcTradeVolume24h * btcRate)}</p>\r\n                    <p className=\"btc-price\">{btcTradeVolume24h.toFixed(2)} BTC</p>\r\n                </div>\r\n                <div className=\"exchange-card-score\">\r\n                    <p>{notice}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"exchanges-links-wrap\">\r\n                <p className=\"tag\">Rank: <span className=\"score-bg\">{scoreRank}</span></p> \r\n                {urls.map( (url,i) => url !== '' && <p className=\"exchanges-links tag\" key={i}>\r\n                    <a href={url}>\r\n                        <i class=\"fas fa-link\"></i>\r\n                        {name} link {i+1}\r\n                    </a>\r\n                </p>)}\r\n                <p className=\"tag\">country: {country}</p>\r\n                    \r\n            </div>\r\n            <table className=\"exchanges-table\">\r\n                <thead>\r\n                    <tr className=\"\">\r\n                        <th>#</th>                \r\n                        <th>Currency</th>\r\n                        <th>Pair</th>\r\n                        <th>spread</th>\r\n                        <th colspan={3}>\r\n                            Price\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>eth</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th colspan={3}>\r\n                            converted volume\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>eth</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th>trust score</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tickers.map( (coin,i) => <tr key={i}>\r\n                        <td>{i+1}</td>\r\n                        <td><Link to={`/cryptocurrencies/${coin.coin_id}`}>\r\n                            {coin.coin_id && coin.coin_id.split('-').join(' ')}</Link>\r\n                        </td>\r\n                        <td>\r\n                            <a href={coin.trade_url}>{coin.base}/{coin.target}</a>\r\n                        </td>\r\n                        <td>{coin.bid_ask_spread_percentage.toFixed(3)}%</td>\r\n                        <td>{coin.converted_last.btc}</td>\r\n                        <td>{coin.converted_last.eth}</td>\r\n                        <td>{formated(coin.converted_last.usd)}</td>\r\n                        <td>{formatedNum(coin.converted_volume.btc)}</td>\r\n                        <td>{formatedNum(coin.converted_volume.eth)}</td>\r\n                        <td>{formated(coin.converted_volume.usd)}</td>\r\n                        <td>{coin.trust_score ? <i>&#10004;</i> : <i>&#10006;</i>}</td>\r\n                    </tr> )}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExchangeCard\r\n","import React,{useState,useEffect} from 'react'\r\n// import Card  from './Card'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nimport ExchangeCard from './ExchangeCard'\r\nimport axios from 'axios'\r\nexport default function ExchangesCard(data) {\r\n      const CoinGeckoClient = new CoinGecko()\r\n    const [exchangesData,setExchangesData] =  useState([])\r\n    const [isLoad,setIsLoad] =  useState(true)\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source()\r\n        let id = data.match.params.id\r\n        const fetchData = async () => {\r\n            setIsLoad(true)\r\n            let { data } = await CoinGeckoClient.exchanges.fetch(id)\r\n            setExchangesData({\r\n                id: id,\r\n                name: data.name,\r\n                country: data.country,\r\n                img: data.image,\r\n                score: data.trust_score,\r\n                scoreRank: data.trust_score_rank,\r\n                year: data.year_established || '',\r\n                urls: [data.url,data.facebook_url,data.other_url_1,data.other_url_2],\r\n                tickers: data.tickers,\r\n                btcTradeVolume24h: (data.trade_volume_24h_btc + data.trade_volume_24h_btc_normalized) / 2,\r\n                notice: data.alert_notice\r\n            })\r\n            setIsLoad(false)\r\n        }\r\n        fetchData()\r\n        return () => source.cancel()\r\n    },[])\r\n        return (\r\n            <div className=\"page\">\r\n               {isLoad ? <Spinner/> : <ExchangeCard data={exchangesData}/>}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            404 page Not Found            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n// components\r\nimport Navbar from './Navbar'\r\nimport HomePage from './HomePage'\r\nimport Cryptocurrencies from './Cryptocurrencies'\r\nimport Watchlist from './Watchlist'\r\nimport Exchanges from './Exchanges'\r\nimport About from './About'\r\nimport News from './News'\r\nimport CoinCard from './CoinCard'\r\nimport ExchangesCard from './ExchangesCard'\r\nimport NotFound from './NotFound'\r\n\r\nimport { CSSTransition,TransitionGroup} from \"react-transition-group\";\r\n// router\r\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default function Coindex() {\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies', Component: Cryptocurrencies },\r\n        { path: '/cryptocurrencies/:id', name: 'CoinCard', Component: CoinCard },\r\n        { path: '/exchanges', name: 'Exchanges', Component: Exchanges },\r\n        { path: '/exchanges/:id', name: 'Exchanges', Component: ExchangesCard },\r\n        { path: '/watchlist', name: 'Watchlist', Component: Watchlist },\r\n        { path: '/news', name: 'News', Component: News },\r\n        { path: '/about', name: 'About', Component: About },\r\n        { path: '/', name: 'HomePage', Component: HomePage },\r\n    ]\r\n    return (\r\n        <div className='container'>\r\n        <Router>\r\n            <Navbar />\r\n            <Route render={({location}) => {\r\n                return (<TransitionGroup>\r\n                    <CSSTransition\r\n                        key={location.key}\r\n                        timeout={200}\r\n                        classNames='page'\r\n                        unmountOnExit \r\n                    >\r\n                    <Switch location={location}>\r\n                        {routes.map(({path, Component}) => {\r\n                            return <Route\r\n                                        key={path}\r\n                                        path={path} \r\n                                        component={Component}\r\n                                        exact\r\n                                    />\r\n                        })}\r\n                        <Route component={NotFound}/>\r\n                    </Switch>\r\n                    </CSSTransition> \r\n                </TransitionGroup>)\r\n            }}/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coindex from './components/Coindex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Coindex />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}