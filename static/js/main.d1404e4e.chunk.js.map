{"version":3,"sources":["components/Logo.jsx","components/SerachBox.jsx","components/Navbar.jsx","components/GlobalDataSection.jsx","components/Table.jsx","components/Spinner.js","components/HomePage.jsx","components/Cryptocurrencies.jsx","components/Watchlist.jsx","components/Exchanges.jsx","components/About.jsx","components/News.jsx","components/Card.jsx","components/CoinCard.jsx","components/ExchangeCard.jsx","components/ExchangesCard.jsx","components/NotFound.jsx","components/Coindex.jsx","index.js"],"names":["Logo","className","to","SerachBox","type","placeholder","autoFocus","Navbar","path","name","map","route","activeclassname","exact","GlobalDataSection","cryptocurrencies","marketCap","exchanges","end","start","decimals","separator","Table","data","formated","x","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","coin","i","id","src","image","alt","market_cap_rank","symbol","color","market_cap_change_percentage_24h","current_price","market_cap","toFixed","high_24h","low_24h","Spinner","HomePage","useState","globalData","setGlobalData","topCoin","setTopCoin","isFetch","setIsFetch","CoinGeckoClient","CoinGecko","useEffect","fetchGlobalData","a","global","res","markets","active_cryptocurrencies","total_market_cap","usd","fetchTopCoinData","coins","item","Cryptocurrencies","setNamesIndex","coinListData","setCoinListData","fetchNames","list","names","fetchData","console","log","Watchlist","Exchanges","exchangesList","setExchangesList","btcRate","setBtcRate","isLoad","setIsLoad","fetchDetails","all","simple","price","ids","vs_currencies","btcUsdRate","newData","exchange","img","vol24","trade_volume_24h_btc_normalized","score","trust_score_rank","url","year","year_established","bitcoin","error","colSpan","About","News","Card","priceColor","change24","data-name","rank","target","href","hpLink","class","dangerouslySetInnerHTML","__html","createMarkup","description","CoinCard","coinData","setCoinData","source","axios","CancelToken","match","params","fetch","market_data","price_change_percentage_24h","large","links","homepage","en","cancel","ExchangeCard","country","urls","scoreRank","tickers","btcTradeVolume24h","notice","colspan","coin_id","split","join","trade_url","base","bid_ask_spread_percentage","converted_last","btc","eth","converted_volume","trust_score","ExchangesCard","exchangesData","setExchangesData","facebook_url","other_url_1","other_url_2","trade_volume_24h_btc","alert_notice","NotFound","Coindex","routes","Component","render","location","TransitionGroup","CSSTransition","timeout","classNames","unmountOnExit","component","key","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1404e4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo-wrap\">\r\n            <Link to='/' className=\"logo\">Coindex</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SerachBox() {\r\n    return (\r\n        <div className='serach-box'>\r\n            <input \r\n                type='text'\r\n                placeholder='Search Cryptocurrency...'\r\n                autoFocus\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.css'\r\nimport './nav.css'\r\nimport Logo from './Logo'\r\nimport SerachBox from './SerachBox'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(){\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies'},\r\n        { path: '/exchanges', name: 'Exchanges'},\r\n        { path: '/watchlist', name: 'Watchlist'},\r\n        { path: '/news', name: 'News'},\r\n        { path: '/about', name: 'About'},\r\n    ]\r\n    return (\r\n        <nav>\r\n            <Logo/>\r\n            <div className=\"menu\">\r\n            {routes.map( route => {\r\n                return <Link \r\n                    to={route.path}\r\n                    key={route.path}\r\n                    activeclassname='active'\r\n                    exact=\"true\"\r\n                >{route.name}</Link>\r\n            })}\r\n            </div>\r\n            <SerachBox/>\r\n        </nav>\r\n    )\r\n}","import CountUp from 'react-countup';\r\n\r\nexport default function GlobalDataSection({cryptocurrencies,marketCap,exchanges}) {\r\n    return (\r\n        <section className=\"global-data-section\">\r\n                    <div className=\"details-num-card\">\r\n                        <h1><CountUp end={cryptocurrencies || ''}/></h1>\r\n                        <h2>Cryptocurrencies</h2>\r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>$<CountUp\r\n                                start={0}\r\n                                decimals={0}\r\n                                separator={','}\r\n                                // end={Math.round(marketCap / 1000000000) || 0}\r\n                                end={marketCap || ''}\r\n                            /></h1>\r\n                        <h2>Global Market Cap</h2> \r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>\r\n                            <CountUp end={exchanges || ''}/>\r\n                        </h1>\r\n                        <h2>Exchanges</h2>\r\n                    </div>\r\n            </section>\r\n    )\r\n}","import React from 'react'\r\nimport {Link } from \"react-router-dom\";\r\n\r\nimport './table.css'\r\nexport default function Table({data}) {\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n      <div className=\"table-wrap\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n            data.map((coin,i) => {\r\n            return (\r\n              <tr className='tr-wrap' key={i}>\r\n                  <td className='coin-name-td'>\r\n                <Link to={`/cryptocurrencies/${coin.id}`}>\r\n                    <div className=\"card-flex\">\r\n                        <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                        <div className=\"coin-name\">\r\n                          <h5>{coin.name}</h5>\r\n                          <div className=\"coin-mini-details\">\r\n                            <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                            <p className=\"symbol-name\">{coin.symbol}</p>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </Link>\r\n                  </td>\r\n                  <td\r\n                  className=\"bold\"\r\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{formated(coin.current_price)}</td>\r\n                  <td>{formated(coin.market_cap.toFixed())}</td>\r\n                  <td\r\n                    className=\"bold\"\r\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n                  <td>{formated(coin.high_24h)}</td>\r\n                  <td>{formated(coin.low_24h)}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        \r\n        <div className=\"spinner-wrap\">\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, {useState, useEffect} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport GlobalDataSection from './GlobalDataSection'\r\nimport Table from './Table'\r\nimport './homepage.css'\r\nimport  Spinner from './Spinner'\r\nexport default function HomePage() {\r\n    const [globalData, setGlobalData] = useState({})\r\n    const [topCoin, setTopCoin] = useState([])\r\n    const [isFetch,setIsFetch] = useState(false)\r\n    const CoinGeckoClient = new CoinGecko()\r\n    useEffect(() => {\r\n        const fetchGlobalData = async () => {\r\n            setIsFetch(true)\r\n            const { data } = await CoinGeckoClient.global();\r\n            const res = await data.data\r\n            setGlobalData({\r\n                exchanges: res.markets,\r\n                cryptocurrencies: res.active_cryptocurrencies,\r\n                marketCap: res.total_market_cap.usd,\r\n            })\r\n            setIsFetch(false)\r\n        }\r\n        const fetchTopCoinData = async () => {\r\n            setIsFetch(true)\r\n            let {data} = await CoinGeckoClient.coins.markets()\r\n            data.map(item => ({\r\n                id: item.id,\r\n                name: item.name,\r\n                image: item.image,\r\n                market_cap_rank: item.market_cap_rank,\r\n                symbol: item.symbol,\r\n                market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n                high_24h: item.high_24h,\r\n                low_24h: item.low_24h,\r\n            }))\r\n            setTopCoin(data)\r\n            setIsFetch(false)\r\n        }\r\n        fetchGlobalData()\r\n        fetchTopCoinData()\r\n    },[])\r\n    const {cryptocurrencies,exchanges,marketCap} = globalData\r\n    return (\r\n        <div className=\"page homepage\">\r\n            <div>\r\n                {isFetch ? <Spinner/> :\r\n                <GlobalDataSection \r\n                cryptocurrencies={cryptocurrencies}\r\n                marketCap={marketCap}\r\n                exchanges={exchanges}\r\n                />}\r\n                {isFetch ? <Spinner/> : <Table data={topCoin}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\n// import axios from 'axios'\r\n// import InfinitiiTr from './InfinitiiTr'\r\n// import InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {Link } from \"react-router-dom\";\r\nimport Spinner from './Spinner'\r\n\r\nexport default function Cryptocurrencies() {\r\n    const [namesIndex, setNamesIndex] = useState([])\r\n    const [coinListData, setCoinListData] = useState(null)\r\n    const [isFetch,setIsFetch] = useState(false)\r\n    const CoinGeckoClient = new CoinGecko()\r\n    useEffect(() => {\r\n        const fetchNames = async () => {\r\n            setIsFetch(true)\r\n            let {data} = await CoinGeckoClient.coins.list();\r\n            let names = data.map(coin => coin.id)\r\n            setNamesIndex(names)\r\n            setIsFetch(false)\r\n        }\r\n        \r\n        fetchData()\r\n        fetchNames()\r\n    },[])\r\n    const fetchData = async () => {\r\n        let {data} = await CoinGeckoClient.coins.markets();\r\n            console.log(data);\r\n        data.map(item => ({\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            market_cap_rank: item.market_cap_rank,\r\n            symbol: item.symbol,\r\n            market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n            high_24h: item.high_24h,\r\n            low_24h: item.low_24h,\r\n        }))\r\n        setCoinListData(data)\r\n    }\r\n    const fetchMoreData = async () => {\r\n        let {data} = await CoinGeckoClient.coins.markets();\r\n            console.log(data);\r\n        data.map(item => ({\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            market_cap_rank: item.market_cap_rank,\r\n            symbol: item.symbol,\r\n            market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n            high_24h: item.high_24h,\r\n            low_24h: item.low_24h,\r\n        }))\r\n        setCoinListData(coinListData.concat(data))\r\n    }\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"table-fluid\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          { !coinListData ? <Spinner/> :\r\n            coinListData.map(coin=> {\r\n            return (\r\n                <>\r\n              <tr className='tr-wrap' key={coin.id}>\r\n                  <td className='coin-name-td'>\r\n                <Link to={`/cryptocurrencies/${coin.id}`}>\r\n                    <div className=\"card-flex\">\r\n                        <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                        <div className=\"coin-name\">\r\n                          <h5>{coin.name}</h5>\r\n                          <div className=\"coin-mini-details\">\r\n                            <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                            <p className=\"symbol-name\">{coin.symbol}</p>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </Link>\r\n                  </td>\r\n                  <td\r\n                  className=\"bold\"\r\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{formated(coin.current_price) || 0}</td>\r\n                  <td>{formated(coin.market_cap.toFixed() || 0)}</td>\r\n                  <td\r\n                    className=\"bold\"\r\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n                  <td>{formated(coin.high_24h)}</td>\r\n                  <td>{formated(coin.low_24h)}</td>\r\n              </tr>\r\n              \r\n              {/* <InfiniteScroll\r\n                dataLength={coinListData.length} //This is important field to render the next data\r\n                next={fetchMoreData}    \r\n                hasMore={true}\r\n                \r\n                loader={<h4>Loading...</h4>}>\r\n                    <InfinitiiTr coin={coinListData}/>\r\n            </InfiniteScroll> */}\r\n            </>\r\n            )\r\n          })\r\n          \r\n          }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Watchlist() {\r\n    return (\r\n        <div  className=\"page\">\r\n            Watchlist page\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n","import CoinGecko from 'coingecko-api'\r\nimport React, {useState, useEffect} from 'react'\r\nimport Spinner from './Spinner'\r\nimport {Link } from \"react-router-dom\";\r\nimport './exchange.css'\r\nexport default function Exchanges() {\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const [exchangesList, setExchangesList] = useState([])\r\n    const [btcRate, setBtcRate] = useState(0)\r\n    const [isLoad, setIsLoad] = useState(false)\r\n    useEffect(() => {\r\n        let fetchDetails = async () => {\r\n            setIsLoad(true)\r\n            let {data} = await CoinGeckoClient.exchanges.all()\r\n            let btcUsdRate = await CoinGeckoClient.simple.price({\r\n                ids: 'bitcoin',\r\n                vs_currencies: 'usd',\r\n            });\r\n            let newData = data.map(exchange => ({\r\n                id: exchange.id,\r\n                name: exchange.name,\r\n                img: exchange.image,\r\n                vol24: exchange.trade_volume_24h_btc_normalized,\r\n                score: exchange.trust_score_rank,\r\n                url: exchange.url,\r\n                year: exchange.year_established\r\n            }))\r\n            setBtcRate(btcUsdRate.data.bitcoin.usd)\r\n            setExchangesList(newData)\r\n            setIsLoad(false)\r\n        }\r\n        try {\r\n            fetchDetails()\r\n        } catch (error) {\r\n            console.error(error)\r\n        }               \r\n    },[])\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n        <div className=\"page\">\r\n            {\r\n                isLoad ? <Spinner/> : \r\n            <table className=\"exchanges-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>exchange name</th>\r\n                        <th colSpan={2}>\r\n                                Volume(24h) price\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th>year established</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n            {exchangesList.map(exchange => {\r\n                return <tr className='tr-wrap' key={exchange.id}>\r\n                    <td ><p>{exchange.score || '-'}</p></td>\r\n                    <td className=\"flex-td\">\r\n                        <span><img className='exchange-img' src={exchange.img} alt={`${exchange.name} symbol`}/></span>\r\n                        <h1>\r\n                            <Link to={`/exchanges/${exchange.id}`}>\r\n                            {exchange.name || '-'}</Link>\r\n                        </h1>\r\n                    </td>\r\n                    <td className=\"left-price\"><p>{exchange.vol24.toFixed()|| '-' } <span className=\"btc-tag\">BTC</span> </p></td>\r\n                    <td className=\"right-price\"><p>{formated(exchange.vol24 * btcRate)}</p></td>\r\n                    <td><p>{exchange.year || '-'}</p></td>\r\n                </tr>\r\n            })}\r\n                </tbody>\r\n            </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div  className=\"page\">\r\n            About page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function News() {\r\n    return (\r\n        <div  className=\"page\">\r\n            News page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './card.css'\r\nfunction Card({data}) {\r\n    let priceColor = data.change24 > 0 ? 'rgb(0, 210, 0)' : 'rgb(255, 101, 0)'\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    const  createMarkup = x => ({__html: x    })\r\n    const formatedUsd = x => new Intl.NumberFormat('en-US', { \r\n    style: 'currency', \r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2\r\n    }).format(x)\r\n    return (\r\n        <div data-name={data.id} className=\"card\">\r\n            <section className=\"card-cover\">\r\n                <div className=\"data-basic\">\r\n                    <div className=\"data-basic-details\">\r\n                        <img className=\"coin-symbol-img\" src={data.img} alt=\"coin\"></img>\r\n                        <h1 className=\"coin-name\">{data.name}</h1>\r\n                        <p className=\"coin-symbol\">{data.symbol}</p>\r\n                    </div>\r\n                    <div className=\"cards-details-btns\">\r\n                        <p className=\"data-basic-rank\">rank #{data.rank}</p>\r\n                        <a className=\"data-basic-link\" target=\"_blank\" href={data.hpLink}>homepage</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-price-wrap\">\r\n                    <p className=\"data-price-txt\">{data.name} Price \r\n                    <span className=\"data-price-symbol\">({data.symbol})</span></p>\r\n                    <h1 \r\n                    style={{color: priceColor}}\r\n                    className=\"data-price\">{formatedUsd(data.price)}</h1>\r\n                    <p \r\n                        style={{color: priceColor}} \r\n                        className=\"data-price-change\">\r\n                        <span class={`fas ${data.change24 > 0 ? 'fa-sort-up' : data.change24 < 0 ? 'fa-sort-down' : ''}`}></span>\r\n                        {formated(data.change24)}%</p>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"coin-description\">\r\n                    <p dangerouslySetInnerHTML={createMarkup(data.description)} />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,{useState,useEffect} from 'react'\r\nimport Card  from './Card'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nimport axios from 'axios'\r\nexport default function CoinCard(name) {\r\n      const CoinGeckoClient = new CoinGecko()\r\n    const [coinData,setCoinData] =  useState(null)\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source()\r\n        const fetchData = async () => {\r\n            let id = name.match.params.id\r\n            let { data } = await CoinGeckoClient.coins.fetch(id)\r\n            setCoinData({\r\n                id: data.id,\r\n                change24: data.market_data.price_change_percentage_24h,\r\n                img: data.image.large,\r\n                name: data.name,\r\n                symbol: data.symbol,\r\n                rank: data.market_cap_rank,\r\n                hpLink: data.links.homepage[0],\r\n                price: data.market_data.current_price.usd,\r\n                description: data.description.en\r\n            })\r\n        }\r\n        fetchData()\r\n        return () => source.cancel()\r\n    },[])\r\n        return (\r\n\r\n            <div className=\"page\">\r\n                {!coinData ? <Spinner/> : <Card data={coinData}/>}\r\n            </div>\r\n    )\r\n}","import React, { useState,useEffect } from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport {Link } from \"react-router-dom\";\r\nimport './exchange.css'\r\nfunction ExchangeCard({data}) {\r\n    const CoinGeckoClient = new CoinGecko()\r\n    const [btcRate, setBtcRate] = useState(null)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let btcUsdRate = await CoinGeckoClient.simple.price({\r\n                ids: 'bitcoin',\r\n                vs_currencies: 'usd',\r\n            });\r\n            setBtcRate(btcUsdRate.data.bitcoin.usd)\r\n        }\r\n        fetchData()\r\n    },[data])\r\n    const {id,name,country,img,score,\r\n        scoreRank,year,urls,tickers,\r\n        btcTradeVolume24h,notice} = data\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n        }).format(x)\r\n    return (\r\n        <div>\r\n            <h1>{name}</h1>\r\n            <img src={img} alt={`${name}-icon`}/>\r\n            <p>BTC Trade Volume(24h): {btcTradeVolume24h.toFixed(2)} BTC</p>\r\n            <p>USD Trade Volume(24h): {formated(btcTradeVolume24h * btcRate)}</p>\r\n            <p>score: {score}</p>\r\n            <p>{notice}</p>\r\n            {urls.map( (url,i) => url !== '' && <p key={i}><a href={url}>{url}</a></p>)}\r\n            <table className=\"exchanges-table\">\r\n                <thead>\r\n                    <tr className=\"\">\r\n                        <th>#</th>                \r\n                        <th>Currency</th>\r\n                        <th>Pair</th>\r\n                        <th>spread</th>\r\n                        <th colspan={3}>\r\n                            Price\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>eth</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th colspan={3}>\r\n                            converted volume\r\n                            <div className=\"flex-th-price\">\r\n                                <td>btc</td>\r\n                                <td>eth</td>\r\n                                <td>usd</td>\r\n                            </div>\r\n                        </th>\r\n                        <th>trust score</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tickers.map( (coin,i) => <tr key={i}>\r\n                        <td>{i+1}</td>\r\n                        <td><Link to={`/cryptocurrencies/${coin.coin_id}`}>\r\n                            {coin.coin_id && coin.coin_id.split('-').join(' ')}</Link>\r\n                        </td>\r\n                        <td>\r\n                            <a href={coin.trade_url}>{coin.base}/{coin.target}</a>\r\n                        </td>\r\n                        <td>{coin.bid_ask_spread_percentage.toFixed(3)}%</td>\r\n                        <td>{coin.converted_last.btc}</td>\r\n                        <td>{coin.converted_last.eth}</td>\r\n                        <td>{formated(coin.converted_last.usd)}</td>\r\n                        <td>{coin.converted_volume.btc}</td>\r\n                        <td>{coin.converted_volume.eth}</td>\r\n                        <td>{formated(coin.converted_volume.usd)}</td>\r\n                        <td>{coin.trust_score ? <i>&#10004;</i> : <i>&#10006;</i>}</td>\r\n                    </tr> )}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExchangeCard\r\n","import React,{useState,useEffect} from 'react'\r\n// import Card  from './Card'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nimport ExchangeCard from './ExchangeCard'\r\nimport axios from 'axios'\r\nexport default function ExchangesCard(data) {\r\n      const CoinGeckoClient = new CoinGecko()\r\n    const [exchangesData,setExchangesData] =  useState([])\r\n    const [isLoad,setIsLoad] =  useState(true)\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source()\r\n        let id = data.match.params.id\r\n        const fetchData = async () => {\r\n            setIsLoad(true)\r\n            let { data } = await CoinGeckoClient.exchanges.fetch(id)\r\n            setExchangesData({\r\n                id: id,\r\n                name: data.name,\r\n                country: data.country,\r\n                img: data.image,\r\n                score: data.trust_score,\r\n                scoreRank: data.trust_score_rank,\r\n                year: data.year_established || '',\r\n                urls: [data.url,data.facebook_url,data.other_url_1,data.other_url_2],\r\n                tickers: data.tickers,\r\n                btcTradeVolume24h: (data.trade_volume_24h_btc + data.trade_volume_24h_btc_normalized) / 2,\r\n                notice: data.alert_notice\r\n            })\r\n            setIsLoad(false)\r\n        }\r\n        fetchData()\r\n        return () => source.cancel()\r\n    },[])\r\n        return (\r\n            <div className=\"page\">\r\n               {isLoad ? <Spinner/> : <ExchangeCard data={exchangesData}/>}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            404 page Not Found            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n// components\r\nimport Navbar from './Navbar'\r\nimport HomePage from './HomePage'\r\nimport Cryptocurrencies from './Cryptocurrencies'\r\nimport Watchlist from './Watchlist'\r\nimport Exchanges from './Exchanges'\r\nimport About from './About'\r\nimport News from './News'\r\nimport CoinCard from './CoinCard'\r\nimport ExchangesCard from './ExchangesCard'\r\nimport NotFound from './NotFound'\r\n\r\nimport { CSSTransition,TransitionGroup} from \"react-transition-group\";\r\n// router\r\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default function Coindex() {\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies', Component: Cryptocurrencies },\r\n        { path: '/cryptocurrencies/:id', name: 'CoinCard', Component: CoinCard },\r\n        { path: '/exchanges', name: 'Exchanges', Component: Exchanges },\r\n        { path: '/exchanges/:id', name: 'Exchanges', Component: ExchangesCard },\r\n        { path: '/watchlist', name: 'Watchlist', Component: Watchlist },\r\n        { path: '/news', name: 'News', Component: News },\r\n        { path: '/about', name: 'About', Component: About },\r\n        { path: '/', name: 'HomePage', Component: HomePage },\r\n    ]\r\n    return (\r\n        <div className='container'>\r\n        <Router>\r\n            <Navbar />\r\n            <Route render={({location}) => {\r\n                return (<TransitionGroup>\r\n                    <CSSTransition\r\n                        key={location.key}\r\n                        timeout={200}\r\n                        classNames='page'\r\n                        unmountOnExit \r\n                    >\r\n                    <Switch location={location}>\r\n                        {routes.map(({path, Component}) => {\r\n                            return <Route \r\n                                        path={path} \r\n                                        component={Component}\r\n                                        exact\r\n                                    />\r\n                        })}\r\n                        <Route component={NotFound}/>\r\n                    </Switch>\r\n                    </CSSTransition> \r\n                </TransitionGroup>)\r\n            }}/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coindex from './components/Coindex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Coindex />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}