{"version":3,"sources":["Top100.js","CryptoApp.js","index.js"],"names":["CoinGeckoClient","CoinGecko","Top100","state","data","saveCoinData","a","coins","markets","res","setState","this","interval","setInterval","clearInterval","formated","x","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","className","map","coin","i","src","image","alt","name","market_cap_rank","symbol","color","market_cap_change_percentage_24h","current_price","market_cap","toFixed","high_24h","low_24h","Component","CryptoApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAGIA,EAAkB,IAAIC,IAELC,E,4MACnBC,MAAQ,CAACC,KAAM,I,EASfC,a,sBAAe,8BAAAC,EAAA,sEACGN,EAAgBO,MAAMC,UADzB,cACTC,EADS,OAETL,EAAOK,EAAIL,KAFF,kBAGN,EAAKM,SAAS,CAACN,KAAMA,KAHf,2C,uDARf,WAAoB,IAAD,OACjBO,KAAKC,SAAWC,aAAY,WAC1B,EAAKR,iBACL,O,kCAEJ,WACE,OAAOM,KAAKR,MAAMC,OAAS,GAAKU,cAAcH,KAAKC,UAAY,O,oBAOjE,WAAS,IACFR,EAAQO,KAAKR,MAAbC,KACDW,EAAW,SAAAC,GAAC,OAAI,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,IACZ,OACE,qBAAKQ,UAAU,gBAAf,SACE,kCACE,gCACE,+BACA,sCACA,uCACA,4CACA,4CACA,0CACA,8CAGF,gCAEEpB,EAAKqB,KAAI,SAACC,EAAKC,GACf,OACE,qBAAYH,UAAU,UAAtB,UACI,oBAAIA,UAAU,eAAd,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKI,IAAKF,EAAKG,MAAOC,IAAG,UAAKJ,EAAKK,KAAV,WACzB,gCACE,6BAAKL,EAAKK,OACV,8BACE,+BAAOL,EAAKM,kBACZ,+BAAON,EAAKO,oBAKpB,oBACAT,UAAU,OACVL,MAAO,CAACe,MAAOR,EAAKS,iCAAmC,EAAI,UAAY,WAFvE,SAGEpB,EAASW,EAAKU,iBAChB,6BAAKrB,EAASW,EAAKW,WAAWC,aAC9B,qBACEd,UAAU,OACVL,MAAO,CAACe,MAAOR,EAAKS,iCAAmC,EAAI,UAAY,WAFzE,UAGET,EAAKS,iCAAiCG,QAAQ,GAHhD,OAIA,6BAAKvB,EAASW,EAAKa,YACnB,6BAAKxB,EAASW,EAAKc,aAvBdb,iB,GAxCac,aCMrBC,EATG,WACd,OACI,yDAEI,cAAC,EAAD,QCDZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a4ee12c.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport CoinGecko from 'coingecko-api'\nlet CoinGeckoClient = new CoinGecko()\n\nexport default class Top100 extends Component {\n  state = {data: []}\n  componentDidMount(){\n    this.interval = setInterval(() => {\n      this.saveCoinData()\n    },3000)\n  }\n  componentWillUnmount(){\n    return this.state.data !== [] ? clearInterval(this.interval) : null\n  }\n  saveCoinData = async () => {\n    let res = await CoinGeckoClient.coins.markets()\n    let data = res.data\n    return this.setState({data: data})\n  }\n  render(){\n    let {data} = this.state\n    let formated = x => new Intl.NumberFormat('en-US', { \n        style: 'currency', \n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }).format(x)\n    return (\n      <div className=\"top-100-table\">\n        <table>\n          <thead>\n            <tr>\n            <th>name</th>\n            <th>price</th>\n            <th>market cap</th>\n            <th>change 24h</th>\n            <th>high 24h</th>\n            <th>low 24h</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            data.map((coin,i) => {\n            return (\n              <tr key={i} className='tr-wrap'>\n                  <td className='coin-name-td'>\n                    <div className='coin-name-div'>\n                      <img src={coin.image} alt={`${coin.name}-icon`}></img>\n                      <div>\n                        <h5>{coin.name}</h5>\n                        <p>\n                          <span>{coin.market_cap_rank}</span>\n                          <span>{coin.symbol}</span>\n                        </p>\n                      </div>\n                    </div>\n                  </td>\n                  <td\n                  className=\"bold\"\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\n                  >{formated(coin.current_price)}</td>\n                  <td>{formated(coin.market_cap.toFixed())}</td>\n                  <td\n                    className=\"bold\"\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\n                  <td>{formated(coin.high_24h)}</td>\n                  <td>{formated(coin.low_24h)}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}","import React from 'react';\r\nimport Top100 from './Top100'\r\nconst CryptoApp = () => {\r\n    return (\r\n        <div>\r\n            wellcome to crypto app\r\n            <Top100 />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CryptoApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CryptoApp from './CryptoApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CryptoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}