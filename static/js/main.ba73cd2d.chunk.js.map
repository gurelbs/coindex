{"version":3,"sources":["components/Logo.jsx","components/SerachBox.jsx","components/Navbar.jsx","components/GlobalDataSection.jsx","components/Table.jsx","components/Spinner.js","components/HomePage.jsx","components/Cryptocurrencies.jsx","components/Watchlist.jsx","components/Exchanges.jsx","components/About.jsx","components/News.jsx","components/NotFound.jsx","components/Card.jsx","components/CoinCard.jsx","components/Coindex.jsx","index.js"],"names":["Logo","className","to","SerachBox","type","placeholder","autoFocus","Navbar","path","name","map","route","activeclassname","exact","GlobalDataSection","cryptocurrencies","marketCap","exchanges","end","start","decimals","separator","Math","round","Table","data","formated","x","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","coin","i","id","src","image","alt","market_cap_rank","symbol","color","market_cap_change_percentage_24h","current_price","market_cap","toFixed","high_24h","low_24h","Spinner","HomePage","useState","globalData","setGlobalData","topCoin","setTopCoin","isFetch","setIsFetch","CoinGeckoClient","CoinGecko","useEffect","fetchGlobalData","a","global","res","markets","active_cryptocurrencies","total_market_cap","usd","fetchTopCoinData","coins","item","Cryptocurrencies","setNamesIndex","coinListData","setCoinListData","fetchNames","list","names","fetchData","console","log","Watchlist","Exchanges","About","News","NotFound","Card","large","CoinCard","coinData","setCoinData","match","params","fetch","Coindex","routes","Component","render","location","TransitionGroup","CSSTransition","timeout","classNames","unmountOnExit","component","key","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba73cd2d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo-wrap\">\r\n            <Link to='/' className=\"logo\">Coindex</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SerachBox() {\r\n    return (\r\n        <div className='serach-box'>\r\n            <input \r\n                type='text'\r\n                placeholder='Search Cryptocurrency...'\r\n                autoFocus\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.css'\r\nimport './nav.css'\r\nimport Logo from './Logo'\r\nimport SerachBox from './SerachBox'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(){\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies'},\r\n        { path: '/exchanges', name: 'Exchanges'},\r\n        { path: '/watchlist', name: 'Watchlist'},\r\n        { path: '/news', name: 'News'},\r\n        { path: '/about', name: 'About'},\r\n    ]\r\n    return (\r\n        <nav>\r\n            <Logo/>\r\n            <div className=\"menu\">\r\n            {routes.map( route => {\r\n                return <Link \r\n                    to={route.path}\r\n                    key={route.path}\r\n                    activeclassname='active'\r\n                    exact=\"true\"\r\n                >{route.name}</Link>\r\n            })}\r\n            </div>\r\n            <SerachBox/>\r\n        </nav>\r\n    )\r\n}","import CountUp from 'react-countup';\r\n\r\nexport default function GlobalDataSection({cryptocurrencies,marketCap,exchanges}) {\r\n    return (\r\n        <section className=\"global-data-section\">\r\n                    <div className=\"details-num-card\">\r\n                        <h1><CountUp end={cryptocurrencies || 0}/></h1>\r\n                        <h2>Cryptocurrencies</h2>\r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>$<CountUp\r\n                                start={0}\r\n                                decimals={0}\r\n                                separator={'.'}\r\n                                end={Math.round(marketCap / 1000000000) || 0}\r\n                            />T</h1>\r\n                        <h2>Global Market Cap</h2> \r\n                    </div>\r\n                    <div className=\"details-num-card\">\r\n                        <h1>\r\n                            <CountUp end={exchanges || 0}/>\r\n                        </h1>\r\n                        <h2>Exchanges</h2>\r\n                    </div>\r\n            </section>\r\n    )\r\n}","import React from 'react'\r\nimport {Link } from \"react-router-dom\";\r\n\r\nimport './table.css'\r\nexport default function Table({data}) {\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n      <div className=\"table-wrap\">\r\n        <table className=\"top100-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n            data.map((coin,i) => {\r\n            return (\r\n              <tr className='tr-wrap' key={i}>\r\n                  <td className='coin-name-td'>\r\n                <Link to={`/cryptocurrencies/${coin.id}`}>\r\n                    <div className=\"card-flex\">\r\n                        <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                        <div className=\"coin-name\">\r\n                          <h5>{coin.name}</h5>\r\n                          <div className=\"coin-mini-details\">\r\n                            <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                            <p className=\"symbol-name\">{coin.symbol}</p>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </Link>\r\n                  </td>\r\n                  <td\r\n                  className=\"bold\"\r\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{formated(coin.current_price)}</td>\r\n                  <td>{formated(coin.market_cap.toFixed())}</td>\r\n                  <td\r\n                    className=\"bold\"\r\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n                  <td>{formated(coin.high_24h)}</td>\r\n                  <td>{formated(coin.low_24h)}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\"></div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, {useState, useEffect} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport GlobalDataSection from './GlobalDataSection'\r\nimport Table from './Table'\r\nimport './homepage.css'\r\nimport  Spinner from './Spinner'\r\nexport default function HomePage() {\r\n    const [globalData, setGlobalData] = useState({})\r\n    const [topCoin, setTopCoin] = useState([])\r\n    const [isFetch,setIsFetch] = useState(false)\r\n    const CoinGeckoClient = new CoinGecko()\r\n    useEffect(() => {\r\n        const fetchGlobalData = async () => {\r\n            setIsFetch(true)\r\n            const { data } = await CoinGeckoClient.global();\r\n            const res = await data.data\r\n            setGlobalData({\r\n                exchanges: res.markets,\r\n                cryptocurrencies: res.active_cryptocurrencies,\r\n                marketCap: res.total_market_cap.usd,\r\n            })\r\n            setIsFetch(false)\r\n        }\r\n        const fetchTopCoinData = async () => {\r\n            setIsFetch(true)\r\n            let {data} = await CoinGeckoClient.coins.markets()\r\n            data.map(item => ({\r\n                id: item.id,\r\n                name: item.name,\r\n                image: item.image,\r\n                market_cap_rank: item.market_cap_rank,\r\n                symbol: item.symbol,\r\n                market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n                high_24h: item.high_24h,\r\n                low_24h: item.low_24h,\r\n            }))\r\n            setTopCoin(data)\r\n            setIsFetch(false)\r\n        }\r\n        fetchGlobalData()\r\n        fetchTopCoinData()\r\n    },[globalData.marketCap])\r\n    const {cryptocurrencies,exchanges,marketCap} = globalData\r\n    return (\r\n        <div className=\"page homepage\">\r\n            <div>\r\n                {isFetch ? <Spinner/> :\r\n                <GlobalDataSection \r\n                    cryptocurrencies={cryptocurrencies}\r\n                    marketCap={marketCap}\r\n                    exchanges={exchanges}\r\n                />}\r\n                {\r\n                    isFetch ? <Spinner/> :\r\n                    <Table\r\n                        data={topCoin}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport CoinGecko from 'coingecko-api'\r\nimport axios from 'axios'\r\nimport InfinitiiTr from './InfinitiiTr'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {Link } from \"react-router-dom\";\r\nimport Spinner from './Spinner'\r\n\r\nexport default function Cryptocurrencies() {\r\n    const [namesIndex, setNamesIndex] = useState([])\r\n    const [coinListData, setCoinListData] = useState(null)\r\n    const [isFetch,setIsFetch] = useState(false)\r\n    const CoinGeckoClient = new CoinGecko()\r\n    useEffect(() => {\r\n        const fetchNames = async () => {\r\n            setIsFetch(true)\r\n            let {data} = await CoinGeckoClient.coins.list();\r\n            let names = data.map(coin => coin.id)\r\n            setNamesIndex(names)\r\n            setIsFetch(false)\r\n        }\r\n        \r\n        fetchData()\r\n        fetchNames()\r\n    },[])\r\n    const fetchData = async () => {\r\n        let {data} = await CoinGeckoClient.coins.markets();\r\n            console.log(data);\r\n        data.map(item => ({\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            market_cap_rank: item.market_cap_rank,\r\n            symbol: item.symbol,\r\n            market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n            high_24h: item.high_24h,\r\n            low_24h: item.low_24h,\r\n        }))\r\n        setCoinListData(data)\r\n    }\r\n    const fetchMoreData = async () => {\r\n        let {data} = await CoinGeckoClient.coins.markets();\r\n            console.log(data);\r\n        data.map(item => ({\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            market_cap_rank: item.market_cap_rank,\r\n            symbol: item.symbol,\r\n            market_cap_change_percentage_24h: item.market_cap_change_percentage_24h,\r\n            high_24h: item.high_24h,\r\n            low_24h: item.low_24h,\r\n        }))\r\n        setCoinListData(coinListData.concat(data))\r\n    }\r\n    const formated = x => new Intl.NumberFormat('en-US', { \r\n        style: 'currency', \r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }).format(x)\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"table-wrap\">\r\n        <table className=\"top100-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>price</th>\r\n              <th>market cap</th>\r\n              <th>change 24h</th>\r\n              <th>high 24h</th>\r\n              <th>low 24h</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          { !coinListData ? <Spinner/> :\r\n            coinListData.map(coin=> {\r\n            return (\r\n                <>\r\n              <tr className='tr-wrap' key={coin.id}>\r\n                  <td className='coin-name-td'>\r\n                <Link to={`/cryptocurrencies/${coin.id}`}>\r\n                    <div className=\"card-flex\">\r\n                        <img src={coin.image} alt={`${coin.name}-icon img`}></img>\r\n                        <div className=\"coin-name\">\r\n                          <h5>{coin.name}</h5>\r\n                          <div className=\"coin-mini-details\">\r\n                            <p className=\"rank\">{coin.market_cap_rank}</p>\r\n                            <p className=\"symbol-name\">{coin.symbol}</p>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </Link>\r\n                  </td>\r\n                  <td\r\n                  className=\"bold\"\r\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{formated(coin.current_price) || 0}</td>\r\n                  <td>{formated(coin.market_cap.toFixed() || 0)}</td>\r\n                  <td\r\n                    className=\"bold\"\r\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\r\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\r\n                  <td>{formated(coin.high_24h)}</td>\r\n                  <td>{formated(coin.low_24h)}</td>\r\n              </tr>\r\n              \r\n              {/* <InfiniteScroll\r\n                dataLength={coinListData.length} //This is important field to render the next data\r\n                next={fetchMoreData}    \r\n                hasMore={true}\r\n                \r\n                loader={<h4>Loading...</h4>}>\r\n                    <InfinitiiTr coin={coinListData}/>\r\n            </InfiniteScroll> */}\r\n            </>\r\n            )\r\n          })\r\n          \r\n          }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Watchlist() {\r\n    return (\r\n        <div  className=\"page\">\r\n            Watchlist page\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n","import React from 'react'\r\n\r\nexport default function Exchanges() {\r\n    return (\r\n        <div  className=\"page\">\r\n            Exchanges page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div  className=\"page\">\r\n            About page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function News() {\r\n    return (\r\n        <div  className=\"page\">\r\n            News page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            404 page Not Found            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Card({data}) {\r\n    return (\r\n        <div>\r\n            <p>{data.id}</p>\r\n            <img src={data.image.large}></img>\r\n            <p>{data.symbol}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,{useState,useEffect} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Card  from './Card'\r\nimport CoinGecko from 'coingecko-api'\r\nimport Spinner from './Spinner'\r\nexport default function CoinCard(name) {\r\n      const CoinGeckoClient = new CoinGecko()\r\n    const [coinData,setCoinData] =  useState(null)\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            let id = name.match.params.id\r\n            let {data} = await CoinGeckoClient.coins.fetch(id)\r\n            setCoinData(data)\r\n        }\r\n        fetchData()\r\n    },[coinData])\r\n        return (\r\n\r\n            <div>\r\n                {console.log(coinData)}\r\n                {!coinData ? <Spinner/> : <Card data={coinData}/>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\n// components\r\nimport Navbar from './Navbar'\r\nimport HomePage from './HomePage'\r\nimport Cryptocurrencies from './Cryptocurrencies'\r\nimport Watchlist from './Watchlist'\r\nimport Exchanges from './Exchanges'\r\nimport About from './About'\r\nimport News from './News'\r\nimport NotFound from './NotFound'\r\nimport CoinCard from './CoinCard'\r\n\r\nimport { CSSTransition,TransitionGroup} from \"react-transition-group\";\r\n// router\r\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nexport default function Coindex() {\r\n    const routes = [\r\n        { path: '/cryptocurrencies', name: 'Cryptocurrencies', Component: Cryptocurrencies },\r\n        { path: '/cryptocurrencies/:id', name: 'Cryptocurrencies', Component: CoinCard },\r\n        { path: '/exchanges', name: 'Exchanges', Component: Exchanges },\r\n        { path: '/watchlist', name: 'Watchlist', Component: Watchlist },\r\n        { path: '/news', name: 'News', Component: News },\r\n        { path: '/about', name: 'About', Component: About },\r\n        { path: '/', name: 'HomePage', Component: HomePage },\r\n    ]\r\n    return (\r\n        <div className='container'>\r\n        <Router>\r\n            <Navbar />\r\n                <Route render={({location}) => {\r\n                    return (<TransitionGroup>\r\n                        <CSSTransition\r\n                            key={location.key}\r\n                            timeout={200}\r\n                            classNames='page'\r\n                            unmountOnExit \r\n                        >\r\n                            <Switch location={location}>\r\n                                {routes.map(({path, Component}) => {\r\n                                    return <Route exact path={path} component={Component}/>\r\n                                })}\r\n                                <Route component={NotFound}/>\r\n                            </Switch>\r\n                        </CSSTransition> \r\n                    </TransitionGroup>)\r\n                }}/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coindex from './components/Coindex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Coindex />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}