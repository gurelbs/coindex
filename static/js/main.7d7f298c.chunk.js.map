{"version":3,"sources":["Top100.js","BitcoinPrice.js","Coindex.js","index.js"],"names":["CoinGeckoClient","CoinGecko","Top100","state","data","saveCoinData","a","coins","markets","setState","this","interval","setInterval","clearInterval","formated","x","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","className","map","coin","i","src","image","alt","name","market_cap_rank","symbol","color","market_cap_change_percentage_24h","current_price","market_cap","toFixed","high_24h","low_24h","Component","BitcoinPrice","useState","price","setPrice","useEffect","fetchData","simple","ids","bitcoinPrice","bitcoin","usd","console","log","Coindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAGIA,EAAkB,IAAIC,IAELC,E,4MACnBC,MAAQ,CAACC,KAAM,I,EASfC,a,sBAAe,8BAAAC,EAAA,sEACMN,EAAgBO,MAAMC,UAD5B,uBACRJ,EADQ,EACRA,KADQ,kBAEN,EAAKK,SAAS,CAACL,KAAMA,KAFf,2C,uDARf,WAAoB,IAAD,OACjBM,KAAKC,SAAWC,aAAY,WAC1B,EAAKP,iBACL,O,kCAEJ,WACE,OAAOK,KAAKP,MAAMC,OAAS,GAAKS,cAAcH,KAAKC,UAAY,O,oBAMjE,WAAS,IACFP,EAAQM,KAAKP,MAAbC,KACDU,EAAW,SAAAC,GAAC,OAAI,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,IACZ,OACE,qBAAKQ,UAAU,gBAAf,SACE,kCACE,gCACE,+BACA,sCACA,uCACA,4CACA,4CACA,0CACA,8CAGF,gCAEEnB,EAAKoB,KAAI,SAACC,EAAKC,GACf,OACE,qBAAYH,UAAU,UAAtB,UACI,oBAAIA,UAAU,eAAd,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKI,IAAKF,EAAKG,MAAOC,IAAG,UAAKJ,EAAKK,KAAV,WACzB,gCACE,6BAAKL,EAAKK,OACV,8BACE,+BAAOL,EAAKM,kBACZ,+BAAON,EAAKO,oBAKpB,oBACAT,UAAU,OACVL,MAAO,CAACe,MAAOR,EAAKS,iCAAmC,EAAI,UAAY,WAFvE,SAGEpB,EAASW,EAAKU,iBAChB,6BAAKrB,EAASW,EAAKW,WAAWC,aAC9B,qBACEd,UAAU,OACVL,MAAO,CAACe,MAAOR,EAAKS,iCAAmC,EAAI,UAAY,WAFzE,UAGET,EAAKS,iCAAiCG,QAAQ,GAHhD,OAIA,6BAAKvB,EAASW,EAAKa,YACnB,6BAAKxB,EAASW,EAAKc,aAvBdb,iB,GAvCac,a,QCHhCxC,EAAkB,IAAIC,IAqBXwC,EApBM,WAAO,IAAD,EACGC,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,KAavB,OAXAC,qBAAU,WACN,IAAMC,EAAS,uCAAG,gCAAAxC,EAAA,sEACON,EAAgB+C,OAAOJ,MAAM,CAACK,IAAK,YAD1C,gBACR5C,EADQ,EACRA,KACF6C,EAAe7C,EAAK8C,QAAQC,IAChCP,EAASK,GACTG,QAAQC,IAAIJ,GAJE,2CAAH,qDAOf,OADArC,aAAY,kBAAMkC,MAAY,KACvB,kBAAMjC,cAAc8B,MAC7B,CAACA,IAGC,8BACI,iDAAoBA,QCfjB,SAASW,IACpB,OACI,8DAEI,cAAC,EAAD,IACA,cAAC,EAAD,OCJZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.7d7f298c.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport CoinGecko from 'coingecko-api'\nlet CoinGeckoClient = new CoinGecko()\n\nexport default class Top100 extends Component {\n  state = {data: []}\n  componentDidMount(){\n    this.interval = setInterval(() => {\n      this.saveCoinData()\n    },3000)\n  }\n  componentWillUnmount(){\n    return this.state.data !== [] ? clearInterval(this.interval) : null\n  }\n  saveCoinData = async () => {\n    let {data} = await CoinGeckoClient.coins.markets()\n    return this.setState({data: data})\n  }\n  render(){\n    let {data} = this.state\n    let formated = x => new Intl.NumberFormat('en-US', { \n        style: 'currency', \n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }).format(x)\n    return (\n      <div className=\"top-100-table\">\n        <table>\n          <thead>\n            <tr>\n            <th>name</th>\n            <th>price</th>\n            <th>market cap</th>\n            <th>change 24h</th>\n            <th>high 24h</th>\n            <th>low 24h</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            data.map((coin,i) => {\n            return (\n              <tr key={i} className='tr-wrap'>\n                  <td className='coin-name-td'>\n                    <div className='coin-name-div'>\n                      <img src={coin.image} alt={`${coin.name}-icon`}></img>\n                      <div>\n                        <h5>{coin.name}</h5>\n                        <p>\n                          <span>{coin.market_cap_rank}</span>\n                          <span>{coin.symbol}</span>\n                        </p>\n                      </div>\n                    </div>\n                  </td>\n                  <td\n                  className=\"bold\"\n                  style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\n                  >{formated(coin.current_price)}</td>\n                  <td>{formated(coin.market_cap.toFixed())}</td>\n                  <td\n                    className=\"bold\"\n                    style={{color: coin.market_cap_change_percentage_24h < 0 ? '#cf4f4f' : '#107210'}}\n                  >{coin.market_cap_change_percentage_24h.toFixed(2)}%</td>\n                  <td>{formated(coin.high_24h)}</td>\n                  <td>{formated(coin.low_24h)}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}","import React, {useState, useEffect} from 'react';\r\nimport CoinGecko from 'coingecko-api'\r\nlet CoinGeckoClient = new CoinGecko()\r\nconst BitcoinPrice = () => {\r\n    const [price, setPrice] = useState(0)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let { data } = await CoinGeckoClient.simple.price({ids: 'bitcoin'})\r\n            let bitcoinPrice = data.bitcoin.usd\r\n            setPrice(bitcoinPrice)\r\n            console.log(bitcoinPrice)\r\n        }\r\n        setInterval(() => fetchData(),5000)\r\n        return () => clearInterval(price)\r\n    },[price])\r\n\r\n    return (\r\n        <div>\r\n            <h1>bitcoin price: {price}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BitcoinPrice;\r\n","import React from 'react';\r\nimport Top100 from './Top100'\r\nimport BitcoinPrice from './BitcoinPrice'\r\nexport default function Coindex() {\r\n    return (\r\n        <>\r\n            wellcome to crypto app\r\n            <BitcoinPrice />\r\n            <Top100 />\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coindex from './Coindex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Coindex />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}